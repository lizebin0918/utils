
buildscript {
	ext {
		springBootVersion = '1.2.3.RELEASE'
		gradleBuildPluginVersion = '0.0.7'
	}
	repositories {
		maven { url "http://maven.oschina.net/content/groups/public/" }
		mavenCentral()
		maven { url 'http://repo.spring.io/plugins-release' }
	}

	dependencies {
		classpath("org.springframework.build.gradle:propdeps-plugin:${gradleBuildPluginVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'propdeps'
apply plugin: 'propdeps-eclipse'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

group = 'com.lzb'

compileJava { options.encoding = "UTF-8" }
compileTestJava { options.encoding = "UTF-8" }

jar {
	baseName = 'com.lzb.springmvc'
	version =  'V0.0.1'
}

test {
	workingDir = 'home'
}

version = 'V0.0.1'

description = """LZB SPRING_MVC Platform"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	maven { url "http://maven.oschina.net/content/groups/public/" }
	mavenCentral()
	maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
	
	compile fileTree('lib')
	
	compile('javax.resource:connector-api:1.5')
	compile('com.google.code.gson:gson:2.3.1')
	
	compile 'javax.validation:validation-api:1.1.0.Final'
	compile 'org.hibernate:hibernate-validator:5.1.3.Final'	
	
	compile('com.googlecode.log4jdbc:log4jdbc:1.2')
	compile('mysql:mysql-connector-java:5.1.34')
	compile('org.mariadb.jdbc:mariadb-java-client:1.1.7')
	compile('com.h2database:h2:1.4.183')
	compile('com.mchange:c3p0:0.9.2.1')
	
	compile 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final'
	compile 'org.hibernate:hibernate-entitymanager:4.3.8.Final'
	
	compile('com.octo.captcha:jcaptcha:1.0') { exclude(module: 'servlet-api') }
	compile('org.bouncycastle:bcprov-jdk15on:1.51')
	compile('com.google.code.spring-crypto-utils:spring-crypto-utils:1.3.6')
	
	compile('commons-codec:commons-codec:1.9')
	compile('joda-time:joda-time:2.6')
	compile('com.google.guava:guava-parent:18.0')
	compile('dom4j:dom4j:1.6.1')
	compile('org.jdom:jdom:1.1.3')
	compile('com.thoughtworks.xstream:xstream:1.4.7')
	compile('commons-lang:commons-lang:2.6')
	compile('com.codahale.metrics:metrics-core:3.0.2')
	
	compile('org.extremecomponents:extremecomponents:1.0.1')
	compile('net.htmlparser.jericho:jericho-html:3.3')
	compile('org.apache.activemq:activemq-client:5.10.0')
	compile('org.apache.xbean:xbean-spring:4.1')

	
	compile("org.springframework.boot:spring-boot-starter-web:1.2.3.RELEASE")
	compile("org.springframework.boot:spring-boot-starter-thymeleaf:1.2.3.RELEASE")
	compile("org.springframework.boot:spring-boot-starter-security:1.2.3.RELEASE")
	compile("org.springframework.boot:spring-boot-starter-actuator:1.2.3.RELEASE")
	compile('org.springframework.boot:spring-boot-starter-integration:1.2.3.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-jdbc:1.2.3.RELEASE')
	
	compile('org.springframework:spring-tx:4.1.3.RELEASE')
	compile('org.springframework:spring-context:4.1.3.RELEASE')
	compile('org.springframework:spring-orm:4.1.3.RELEASE')

	compile 'org.springframework.data:spring-data-jpa:1.7.1.RELEASE'

	compile('org.springframework.integration:spring-integration-jms:4.1.1.RELEASE')
	compile('org.springframework.integration:spring-integration-sftp:4.1.1.RELEASE')
	compile('org.springframework.integration:spring-integration-event:4.1.1.RELEASE')
	compile('org.springframework.integration:spring-integration-ws:4.1.1.RELEASE')
	compile('org.springframework.integration:spring-integration-xml:4.1.1.RELEASE')
	compile('org.springframework.integration:spring-integration-ftp:4.1.1.RELEASE')
	compile('org.springframework.integration:spring-integration-jdbc:4.1.1.RELEASE')
	

	

	
	testCompile("org.springframework.boot:spring-boot-starter-test:1.2.3.RELEASE") { exclude(module: 'commons-logging') }
	testCompile('junit:junit:4.12')
	testCompile('org.mockito:mockito-all:1.10.13')
	testCompile('org.springframework:spring-test:4.1.3.RELEASE')
	testCompile("org.hamcrest:hamcrest-library:1.3")
	
	//testCompile('org.hibernate:hibernate-tools:4.3.1.CR1')
}
eclipse {
	project {
		natures 'org.springframework.ide.eclipse.core.springnature'
		natures 'org.springsource.ide.eclipse.gradle.core.nature'
		buildCommand 'org.springframework.ide.eclipse.core.springbuilder'
	}
	classpath {
		//containers 'org.springsource.ide.eclipse.gradle.classpathcontainer'
		//minusConfigurations += configurations.compile
		//minusConfigurations += configurations.testCompile
	}
}
test {
	testLogging { // Show that tests are run in the command-line output
		events 'started', 'passed' }
}
task wrapper(type: Wrapper) { gradleVersion = '2.2.1' }
task copyRunTimeJars(type: Copy) {
	from configurations.runtime
	into 'lib/runtime'
}
task copyTestRunTimeJars(type: Copy) {
	from (configurations.testRuntime - configurations.runtime)
	into 'lib/testRuntime'
}
eclipse.classpath.file {
	beforeMerged { classpath ->
		classpath.entries.clear()
	}
	whenMerged {  cp ->
		cp.entries.findAll { it.kind == "src" && it.path.startsWith("src/main/") }*.output = "bin/main"
		cp.entries.findAll { it.kind == "src" && it.path.startsWith("src/test/") }*.output = "bin/test"
		cp.entries.findAll { it.kind == "output" }*.path = "bin/main"
	}
}



