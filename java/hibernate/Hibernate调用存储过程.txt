存储过程：
CREATE DEFINER=`gcss`@`%` PROCEDURE `SPROC_GDDW_UIFILELOG_UPDATE_RSP`(IN `INPUT_FILE_ID` varchar(255),OUT `OUTPUT_FINISHED_COUNT` varchar(255))
BEGIN
START TRANSACTION;
	SELECT @suc_cnt:= COUNT(*),@suc_amt:= IFNULL(SUM(YKJE),0) from UI_PLDS where FILE_ID = INPUT_FILE_ID and `STATUS` = 'S';
	SELECT @fail_cnt:= COUNT(*),@fail_amt:= IFNULL(SUM(YKJE),0) from UI_PLDS where FILE_ID = INPUT_FILE_ID and `STATUS` in ('F','E');
	update `UI_FILE_LOG` as uiFileLog 
	SET uiFileLog.FAIL_AMT = @fail_amt,uiFileLog.SUC_AMT = @suc_amt,
	uiFileLog.FAIL_CNT = @fail_cnt,uiFileLog.SUC_CNT = @suc_cnt where uiFileLog.FILE_ID = INPUT_FILE_ID;
	select @zbs:=(SUC_CNT+FAIL_CNT) from UI_FILE_LOG as uiFileLog where FILE_ID = INPUT_FILE_ID;
	IF((@suc_cnt+@fail_cnt)=@zbs) THEN UPDATE UI_FILE_LOG as uiFileLog set uiFileLog.status = 'S' WHERE uiFileLog.status = 'A' AND FILE_STATUS = 'S';
	END IF;
	SELECT COUNT(*) INTO OUTPUT_FINISHED_COUNT FROM UI_FILE_LOG WHERE `STATUS` = 'S' AND FILE_STATUS = 'S';
COMMIT;
END

java代码：
Session session = getSessionFactory().getCurrentSession();
        final Map<String,Integer> result = new HashMap<String, Integer>();   
		session.doWork(new Work() {
            @Override  
            public void execute(Connection conn) throws SQLException   
            {   
                CallableStatement proc = null;   
                try  
                {   
                    proc = conn.prepareCall("{CALL SPROC_GDDW_UIFILELOG_UPDATE_RSP(?,?)}");   
                    //注意：这里是传递输入参数   
                    proc.setString(1, fileId);   
                    //注意：这里是注册输出参数   
                    proc.registerOutParameter(2, java.sql.Types.VARCHAR);   
                    //执行存储过程   
                    proc.execute();   
                    //获取执行完的存储过程的返回值 ，返回值的参数位置
                    result.put("finished", Integer.parseInt(proc.getString(2)));   
                }   
                catch(Exception e)   
                {   
                    throw new DaoException(e);
                }   
                finally  
                {   
                    if(null != proc)   
                    {   
                        proc.close();
                        proc = null;
                    }   
                }   
            }   
        });
		//SELECT COUNT(*) INTO OUTPUT_FINISHED_COUNT FROM UI_FILE_LOG WHERE `STATUS` = 'S' AND FILE_STATUS = 'S';
		if(result.get("finished") == 1) {
			return true;
		}
        return false;